{"version":3,"sources":["assets/images/1.png","assets/images/2.png","assets/images/3.png","assets/images/logo.png","components/Home.js","components/RecycleOptionsPopup.js","components/RecycleNow.js","components/ExchangeRates.js","components/Blog.js","components/Thanks.js","components/Navbar.js","utils/geminiApi.js","components/RecycleAnalysis.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","React","createElement","className","Link","to","href","id","src","require","alt","RecycleOptionsPopup","_ref","isOpen","onClose","navigate","useNavigate","onClick","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","handleSellClick","handleRecycleItemClick","recyclableRates","generalItems","name","rate","medicalWaste","appliances","automobile","RecycleNow","formData","setFormData","useState","contact","date","time","address","pincode","materialType","weight","isSubmitting","setIsSubmitting","submitMessage","setSubmitMessage","showRates","setShowRates","selectedRateCategory","setSelectedRateCategory","showPopup","setShowPopup","showRecyclingOptions","setShowRecyclingOptions","useEffect","parseFloat","isNaN","handleChange","e","value","target","prev","[object Object]","basePrice","total","handleRateCategoryChange","category","openPopup","onSubmit","async","preventDefault","console","log","missingFields","filter","field","length","type","text","join","setTimeout","error","Error","message","htmlFor","onChange","required","pattern","rows","min","step","disabled","toFixed","toggleRates","map","item","index","key","closePopup","categories","title","icon","items","RateBox","delay","isVisible","style","transition","transform","animationDelay","opacity","Category","_ref2","setIsVisible","categoryRef","useRef","observer","window","IntersectionObserver","_ref3","entry","isIntersecting","unobserve","threshold","rootMargin","currentRef","current","observe","ref","idx","ExchangeRates","cat","icons","blogCards","content","Blog","hovered","setHovered","card","onMouseEnter","onMouseLeave","fontSize","marginBottom","Thanks","scrollTo","Navbar","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","RecycleAnalysis","images","setImages","isAnalyzing","setIsAnalyzing","analysisResults","setAnalysisResults","setError","fileInputRef","forEach","image","URL","revokeObjectURL","preview","imagePreview","suggestions","suggestion","onDrop","droppedFiles","Array","from","dataTransfer","files","validFiles","startsWith","newImages","createObjectURL","prevImages","onDragOver","handleUploadClick","click","selectedFiles","accept","multiple","display","updatedImages","splice","removeImage","analysisPromises","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","apiKey","process","base64Image","imageFile","response","fetch","method","headers","Content-Type","body","JSON","stringify","contents","parts","inline_data","mime_type","data","split","generationConfig","temperature","topK","topP","maxOutputTokens","ok","_errorData$error","errorData","json","textResponse","candidates","jsonMatch","match","jsonString","parse","itemType","line","trim","replace","toLowerCase","includes","parseError","analyzeImageWithGemini","results","all","AppContent","isHomePage","useLocation","pathname","Routes","Route","path","element","App","Router","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bbe0b2f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.ebedab57.png\";","module.exports = __webpack_public_path__ + \"static/media/2.ef6842a5.png\";","module.exports = __webpack_public_path__ + \"static/media/3.72465a28.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.057bff39.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nconst Home = () => {\n  return (\n    <div>\n      <div className=\"banner\">\n        <div className=\"content\">\n          <h1>Sell your recyclables<br /> online with Sustainify!</h1>\n          <p>Be a part of the solution Not part of the Pollution.</p>\n          <div className=\"row\">\n            <Link to=\"/recycle\">SELL YOUR RECYCLABLES</Link>\n            <a href=\"#contact\">CONTACT US</a>\n          </div>\n        </div>\n      </div>\n\n      <main>\n        <section id=\"about\">\n          <p>HOW IT WORKS</p>\n          <div className=\"about-container\">\n            <div className=\"about\">\n              <img src={require('../assets/images/1.png')} alt=\"Step 1\" />\n            </div>\n            <div className=\"about\">\n              <img src={require('../assets/images/2.png')} alt=\"Step 2\" />\n            </div>\n            <div className=\"about\">\n              <img src={require('../assets/images/3.png')} alt=\"Step 3\" />\n            </div>\n          </div>\n        </section>\n      </main>\n\n      <footer id=\"contact\">\n        <h2>About</h2>\n        <p>\n          Welcome to <b>SUSTAINIFY</b>, where recycling intertwines with a focus on well-being. Our innovative practices\n          transcend traditional recycling, addressing environmental concerns while actively promoting a healthier world.\n          By transforming waste into valuable resources, we strive to minimize ecological impact, fostering cleaner air,\n          water, and soil. At the core of our mission lies the belief that a sustainable planet and personal health are\n          interconnected. Join us on this transformative journey, as we pioneer initiatives that harmonize environmental\n          sustainability with a health-conscious lifestyle, shaping a future where recycling becomes a catalyst for a\n          vibrant and resilient world.\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RecycleOptionsPopup.css';\n\nconst RecycleOptionsPopup = ({ isOpen, onClose }) => {\n  const navigate = useNavigate();\n\n  const handleRecycleItemClick = () => {\n    navigate('/recycle-analysis');\n    onClose();\n  };\n\n  const handleSellClick = () => {\n    navigate('/recycle');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup-container\">\n        <button className=\"close-button\" onClick={onClose}>×</button>\n        <div className=\"popup-header\">\n          <h2>What would you like to do?</h2>\n        </div>\n        <div className=\"popup-content\">\n          <p>Choose an option below to proceed with your recyclable items:</p>\n          \n          <div className=\"options-container\">\n            <div className=\"option-card\">\n              <div className=\"option-icon sell-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 1V23\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M17 5H9.5C8.57174 5 7.6815 5.36875 7.02513 6.02513C6.36875 6.6815 6 7.57174 6 8.5C6 9.42826 6.36875 10.3185 7.02513 10.9749C7.6815 11.6313 8.57174 12 9.5 12H14.5C15.4283 12 16.3185 12.3687 16.9749 13.0251C17.6313 13.6815 18 14.5717 18 15.5C18 16.4283 17.6313 17.3185 16.9749 17.9749C16.3185 18.6313 15.4283 19 14.5 19H6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </div>\n              <h3>Continue to Sell</h3>\n              <p>Sell your recyclable items and earn money</p>\n              <button \n                className=\"option-button sell-button\" \n                onClick={handleSellClick}\n              >\n                Continue to Sell\n              </button>\n            </div>\n            \n            <div className=\"option-card\">\n              <div className=\"option-icon recycle-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M7 19L12 14L17 19\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M12 14V22\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M8.5 9L12.5 5L16.5 9\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M12.5 5V13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M19 7.5L15 3.5L11 7.5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M15 3.5H7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </div>\n              <h3>Recycle Item</h3>\n              <p>Get ideas on how to recycle your items at home</p>\n              <button \n                className=\"option-button recycle-button\" \n                onClick={handleRecycleItemClick}\n              >\n                Recycle Item\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecycleOptionsPopup;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RecycleNow.css';\nimport RecycleOptionsPopup from './RecycleOptionsPopup';\n\n// Recyclable rates data from rates.html\nconst recyclableRates = {\n  generalItems: [\n    { name: 'Paper', rate: 16 },\n    { name: 'Cardboard', rate: 7 },\n    { name: 'Plastic', rate: 10 },\n    { name: 'Iron', rate: 27 },\n    { name: 'Glass', rate: 'TBA' },\n    { name: 'Aluminium', rate: 105 },\n    { name: 'Steel', rate: 37 },\n    { name: 'Copper', rate: 425 }\n  ],\n  medicalWaste: [\n    { name: 'Blister packs', rate: 'TBA' },\n    { name: 'Plastic bottle', rate: 10 },\n    { name: 'Glass Bottle', rate: 'TBA' },\n    { name: 'Hospital Equipments', rate: 'TBA' }\n  ],\n  appliances: [\n    { name: 'Air Conditioner', rate: 4000 },\n    { name: 'Washing Machine', rate: 600 },\n    { name: 'Geyser', rate: 50 },\n    { name: 'Refrigerator', rate: 1000 },\n    { name: 'Cooler', rate: 20 },\n    { name: 'Television', rate: 150 },\n    { name: 'Microwave', rate: 200 },\n    { name: 'Other Electronics', rate: 'Negotiable' }\n  ],\n  automobile: [\n    { name: 'Car', rate: 2000 },\n    { name: 'Bike', rate: 2100 }\n  ]\n};\n\nconst RecycleNow = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    contact: '',\n    date: '',\n    time: '',\n    address: '',\n    pincode: '',\n    materialType: 'General Items',\n    weight: '',\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitMessage, setSubmitMessage] = useState(null);\n  const [showRates, setShowRates] = useState(false);\n  const [selectedRateCategory, setSelectedRateCategory] = useState('generalItems');\n  const [showPopup, setShowPopup] = useState(false);\n  const [showRecyclingOptions, setShowRecyclingOptions] = useState(false);\n\n  // Check if weight is less than 10kg to show recycling options\n  useEffect(() => {\n    const weight = parseFloat(formData.weight);\n    if (!isNaN(weight) && weight > 0 && weight < 10) {\n      setShowRecyclingOptions(true);\n    } else {\n      setShowRecyclingOptions(false);\n    }\n  }, [formData.weight]);\n\n  const openPopup = () => {\n    setShowPopup(true);\n  };\n\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSubmitMessage(null);\n\n    console.log('Form submission started');\n\n    // Client-side validation for required fields\n    const requiredFields = ['name', 'contact', 'date', 'time', 'address', 'pincode'];\n    const missingFields = requiredFields.filter(field => !formData[field]);\n    \n    if (missingFields.length > 0) {\n      setSubmitMessage({\n        type: 'error',\n        text: `Please fill in all required fields: ${missingFields.join(', ')}`\n      });\n      setIsSubmitting(false);\n      return;\n    }\n\n    try {\n      // Log form data to console but don't send to server\n      console.log('Form data:', formData);\n      \n      // Show success message\n      setSubmitMessage({\n        type: 'success',\n        text: 'Your pickup request has been submitted successfully!'\n      });\n      \n      // Reset form on success\n      setFormData({\n        name: '',\n        contact: '',\n        date: '',\n        time: '',\n        address: '',\n        pincode: '',\n        materialType: 'General Items',\n        weight: '',\n      });\n      \n      // Wait a moment before redirecting to thanks page\n      console.log('Redirecting to Thanks page in 1.5 seconds...');\n      setTimeout(() => {\n        console.log('Navigating to /thanks');\n        navigate('/thanks');\n      }, 1500);\n    } catch (error) {\n      console.error('Error processing form:', error);\n      setSubmitMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to process. Please try again.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Calculate price details\n  const getBaseRate = () => {\n    // Default rate if no specific rate is found\n    return 50;\n  };\n\n  const basePrice = parseFloat(formData.weight) * getBaseRate() || 0;\n  const deliveryCharge = 40;\n  const packagingFee = 20;\n  const total = basePrice + deliveryCharge + packagingFee;\n\n  // Toggle rates display\n  const toggleRates = () => {\n    setShowRates(!showRates);\n  };\n\n  // Handle rate category change\n  const handleRateCategoryChange = (category) => {\n    setSelectedRateCategory(category);\n  };\n\n  return (\n    <div className=\"recycle-container\">\n      <div className=\"recycle-content\">\n        <div className=\"recycle-main\">\n          {/* Main Form Section */}\n          <div className=\"recycle-form-container\">\n            <h1 className=\"recycle-title\">Pickup Request Form</h1>\n            \n            {showRecyclingOptions && (\n              <div className=\"recycling-options\">\n                <p>Your item weighs less than 10kg! Did you know you could recycle it at home?</p>\n                <button onClick={openPopup} className=\"explore-options-button\">\n                  Explore Recycling Options\n                </button>\n              </div>\n            )}\n            \n            <form onSubmit={handleSubmit} className=\"recycle-form\">\n              <div className=\"form-grid\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">\n                    <span className=\"icon name-icon\"></span>Enter Name:\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"contact\">\n                    <span className=\"icon phone-icon\"></span>Enter Contact No:\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"contact\"\n                    id=\"contact\"\n                    value={formData.contact}\n                    onChange={handleChange}\n                    pattern=\"[0-9]{10}\"\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"date\">\n                    <span className=\"icon date-icon\"></span>Enter Date:\n                  </label>\n                  <div className=\"input-with-icon\">\n                    <span className=\"input-icon date-icon\"></span>\n                    <input\n                      type=\"date\"\n                      name=\"date\"\n                      id=\"date\"\n                      value={formData.date}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"time\">\n                    <span className=\"icon time-icon\"></span>Enter Time:\n                  </label>\n                  <div className=\"input-with-icon\">\n                    <span className=\"input-icon time-icon\"></span>\n                    <input\n                      type=\"time\"\n                      name=\"time\"\n                      id=\"time\"\n                      value={formData.time}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group full-width\">\n                  <label htmlFor=\"address\">\n                    <span className=\"icon address-icon\"></span>Enter Address:\n                  </label>\n                  <div className=\"input-with-icon\">\n                    <span className=\"input-icon address-icon\"></span>\n                    <textarea\n                      name=\"address\"\n                      id=\"address\"\n                      value={formData.address}\n                      onChange={handleChange}\n                      rows={3}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"pincode\">\n                    <span className=\"icon pincode-icon\"></span>Enter Pincode:\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"pincode\"\n                    id=\"pincode\"\n                    value={formData.pincode}\n                    onChange={handleChange}\n                    pattern=\"[0-9]{6}\"\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"materialType\">\n                    <span className=\"icon material-icon\"></span>Type of Material:\n                  </label>\n                  <div className=\"input-with-icon\">\n                    <span className=\"input-icon material-icon\"></span>\n                    <select\n                      name=\"materialType\"\n                      id=\"materialType\"\n                      value={formData.materialType}\n                      onChange={handleChange}\n                    >\n                      <option value=\"General Items\">General Items</option>\n                      <option value=\"Medical Items\">Medical Items</option>\n                      <option value=\"Appliances\">Appliances</option>\n                      <option value=\"Automobiles\">Automobiles</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"weight\">\n                    <span className=\"icon weight-icon\"></span>Estimated Weight (in Kg):\n                  </label>\n                  <div className=\"input-with-icon\">\n                    <span className=\"input-icon weight-icon\"></span>\n                    <input\n                      type=\"number\"\n                      name=\"weight\"\n                      id=\"weight\"\n                      value={formData.weight}\n                      onChange={handleChange}\n                      min=\"0\"\n                      step=\"0.1\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-actions\">\n                {submitMessage && (\n                  <div className={`message ${submitMessage.type}`}>\n                    {submitMessage.text}\n                  </div>\n                )}\n                <button\n                  type=\"submit\"\n                  className=\"submit-button\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? 'Submitting...' : 'Submit Request'}\n                </button>\n              </div>\n            </form>\n          </div>\n\n          {/* Price Details Section */}\n          <div className=\"price-details\">\n            <div className=\"price-card\">\n              <h2 className=\"price-title\">PRICE DETAILS</h2>\n              <div className=\"price-items\">\n                <div className=\"price-item\">\n                  <span>Base Price (₹{getBaseRate()}/kg)</span>\n                  <span>₹{basePrice.toFixed(2)}</span>\n                </div>\n                <div className=\"price-item\">\n                  <span>Delivery Charge</span>\n                  <span className=\"green-text\">₹{deliveryCharge.toFixed(2)}</span>\n                </div>\n                <div className=\"price-item\">\n                  <span>Packaging Fee</span>\n                  <span>₹{packagingFee.toFixed(2)}</span>\n                </div>\n                <div className=\"price-total\">\n                  <span>Total Amount</span>\n                  <span>₹{total.toFixed(2)}</span>\n                </div>\n                <div className=\"price-savings\">\n                  You will save ₹{(basePrice * 0.1).toFixed(2)} on this order\n                </div>\n              </div>\n            </div>\n\n            {/* Recyclable Rates Section */}\n            <div className=\"rates-section\">\n              <button \n                className=\"rates-toggle-button\" \n                onClick={toggleRates}\n              >\n                {showRates ? 'Hide Recyclable Rates' : 'Show Recyclable Rates'}\n              </button>\n              \n              {showRates && (\n                <div className=\"rates-container\">\n                  <h3 className=\"rates-title\">Recyclable Rates</h3>\n                  \n                  <div className=\"rates-tabs\">\n                    <button \n                      className={selectedRateCategory === 'generalItems' ? 'active' : ''}\n                      onClick={() => handleRateCategoryChange('generalItems')}\n                    >\n                      General Items\n                    </button>\n                    <button \n                      className={selectedRateCategory === 'medicalWaste' ? 'active' : ''}\n                      onClick={() => handleRateCategoryChange('medicalWaste')}\n                    >\n                      Medical Waste\n                    </button>\n                    <button \n                      className={selectedRateCategory === 'appliances' ? 'active' : ''}\n                      onClick={() => handleRateCategoryChange('appliances')}\n                    >\n                      Appliances\n                    </button>\n                    <button \n                      className={selectedRateCategory === 'automobile' ? 'active' : ''}\n                      onClick={() => handleRateCategoryChange('automobile')}\n                    >\n                      Automobile\n                    </button>\n                  </div>\n                  \n                  <div className=\"rates-grid\">\n                    {recyclableRates[selectedRateCategory].map((item, index) => (\n                      <div key={index} className=\"rate-item\">\n                        <div className=\"rate-name\">{item.name}</div>\n                        <div className=\"rate-value\">₹{item.rate}/kg</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Recycle Options Popup */}\n      <RecycleOptionsPopup isOpen={showPopup} onClose={closePopup} />\n    </div>\n  );\n};\n\nexport default RecycleNow;\n","import React, { useRef, useEffect, useState } from 'react';\nimport './ExchangeRates.css';\n\nconst categories = [\n  {\n    title: 'General Items',\n    icon: '♻️',\n    items: [\n      { name: 'Paper', rate: 16 },\n      { name: 'Cardboard', rate: 7 },\n      { name: 'Plastic', rate: 10 },\n      { name: 'Iron', rate: 27 },\n      { name: 'Glass', rate: 'TBA' },\n      { name: 'Aluminium', rate: 105 },\n      { name: 'Steel', rate: 37 },\n      { name: 'Copper', rate: 425 }\n    ]\n  },\n  {\n    title: 'Medical Items',\n    icon: '💊',\n    items: [\n      { name: 'Blister packs', rate: 'TBA' },\n      { name: 'Plastic bottle', rate: 10 },\n      { name: 'Glass Bottle', rate: 'TBA' },\n      { name: 'Hospital Equipments', rate: 'TBA' }\n    ]\n  },\n  {\n    title: 'Appliances',\n    icon: '🔌',\n    items: [\n      { name: 'Air Conditioner', rate: 4000 },\n      { name: 'Washing Machine', rate: 600 },\n      { name: 'Geyser', rate: 50 },\n      { name: 'Refrigerator', rate: 1000 },\n      { name: 'Cooler', rate: 20 },\n      { name: 'Television', rate: 150 },\n      { name: 'Microwave', rate: 200 },\n      { name: 'Other Electronics', rate: 'Negotiable' }\n    ]\n  },\n  {\n    title: 'Automobiles',\n    icon: '🚗',\n    items: [\n      { name: 'Car', rate: 2000 },\n      { name: 'Bike', rate: 2100 }\n    ]\n  }\n];\n\nconst RateBox = ({ title, rate, delay = 0, isVisible = false }) => (\n  <div\n    className={`box${isVisible ? ' box-animate' : ''}`}\n    style={{\n      transition: 'transform 0.3s, box-shadow 0.3s',\n      transform: isVisible ? 'scale(1.05)' : 'scale(1)',\n      animationDelay: `${delay}ms`,\n      opacity: isVisible ? 1 : 0\n    }}\n  >\n    <div className=\"box-text\">{typeof rate === 'number' ? `(Rs.${rate}/kg)` : `(Rs.${rate})`}</div>\n    <div className=\"box-text box-text1\"><b>{title}</b></div>\n  </div>\n);\n\nconst Category = ({ title, icon, items }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const categoryRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          observer.unobserve(entry.target);\n        }\n      },\n      { threshold: 0.1, rootMargin: '50px' }\n    );\n    \n    const currentRef = categoryRef.current;\n    \n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n    \n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"category\" ref={categoryRef}>\n      <h2>{icon} {title}</h2>\n      <div className=\"category-items\">\n        {items.map((item, idx) => (\n          <RateBox key={item.name} title={item.name} rate={item.rate} delay={idx * 100} isVisible={isVisible} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ExchangeRates = () => {\n  return (\n    <div className=\"rates-container\">\n      <div className=\"header\">\n        <h1>Recyclable Rates</h1>\n      </div>\n      <div className=\"content\">\n        <div className=\"scrolling-container\">\n          {categories.map((cat, idx) => (\n            <Category key={cat.title} title={cat.title} icon={cat.icon} items={cat.items} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExchangeRates;\n","import React, { useState } from 'react';\nimport './Blog.css';\n\nconst icons = [\n  '♻️', // Recycle\n  '🌳', // Tree\n  '💧', // Droplet\n  '☀️', // Sun\n  '🚴', // Bike\n  '🗑️', // Trash2\n  '🍃', // Leaf\n  '🧹', // Broom\n  '📖', // BookOpen\n  '🌍'  // Globe\n];\n\nconst blogCards = [\n  {\n    title: \"Reduce, Reuse, Recycle\",\n    content: \"Contribute to a healthier planet by adopting the 3 Rs in your daily life. Reduce waste, reuse items, and recycle materials to minimize your environmental impact.\",\n    icon: icons[0]\n  },\n  {\n    title: \"Plant Trees\",\n    content: \"Help combat deforestation and climate change by participating in tree-planting initiatives. Trees absorb carbon dioxide and provide essential oxygen for a sustainable environment.\",\n    icon: icons[1]\n  },\n  {\n    title: \"Conserve Water\",\n    content: \"Be mindful of your water usage. Simple actions like fixing leaks and using water-efficient appliances can contribute to water conservation and the preservation of aquatic ecosystems.\",\n    icon: icons[2]\n  },\n  {\n    title: \"Sustainable Energy\",\n    content: \"Support and use renewable energy sources such as solar and wind power to reduce reliance on fossil fuels and decrease your carbon footprint.\",\n    icon: icons[3]\n  },\n  {\n    title: \"Eco-Friendly Transportation\",\n    content: \"Opt for eco-friendly transportation methods like biking, walking, or using electric vehicles to reduce air pollution and promote a greener environment.\",\n    icon: icons[4]\n  },\n  {\n    title: \"Waste Reduction\",\n    content: \"Minimize waste by choosing products with minimal packaging and practicing responsible disposal methods, such as composting and proper recycling.\",\n    icon: icons[5]\n  },\n  {\n    title: \"Renewable Resources\",\n    content: \"Support industries that prioritize the use of renewable resources, such as bamboo, hemp, and recycled materials, to reduce the environmental impact of production.\",\n    icon: icons[6]\n  },\n  {\n    title: \"Community Cleanups\",\n    content: \"Participate in local community cleanups to help keep public spaces, parks, and natural habitats free from litter and pollution.\",\n    icon: icons[7]\n  },\n  {\n    title: \"Educate and Advocate\",\n    content: \"Spread awareness about environmental issues and advocate for sustainable practices in your community. Education is key to creating positive change.\",\n    icon: icons[8]\n  }\n];\n\nconst Blog = () => {\n  const [hovered, setHovered] = useState(null);\n  return (\n    <div className=\"blog-container\">\n      <header>\n        <h1>Sustainify Nature</h1>\n      </header>\n      <div className=\"card-container\">\n        {blogCards.map((card, index) => (\n          <div\n            className={`card${hovered === index ? ' card-hovered' : ''}`}\n            key={index}\n            onMouseEnter={() => setHovered(index)}\n            onMouseLeave={() => setHovered(null)}\n            style={{ transition: 'transform 0.3s, box-shadow 0.3s', transform: hovered === index ? 'scale(1.05)' : 'scale(1)' }}\n          >\n            <div className=\"card-icon\" style={{ fontSize: '2rem', marginBottom: '0.5rem' }}>{card.icon}</div>\n            <h2>{card.title}</h2>\n            <p>{card.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Thanks.css';\n\nconst Thanks = () => {\n  useEffect(() => {\n    // Scroll to top when component mounts\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className=\"thanks-container\">\n      <div className=\"thanks-card\">\n        <div className=\"success-icon\">\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\" stroke=\"#4CAF50\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M22 4L12 14.01L9 11.01\" stroke=\"#4CAF50\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n          </svg>\n        </div>\n        <h1>Thank You!</h1>\n        <div className=\"divider\"></div>\n        <h2>Your Request Has Been Successfully Submitted</h2>\n        <p className=\"message\">Our team has received your recycling request and is processing it now. You'll receive a confirmation email shortly with details about the scheduled pickup of your recyclables.</p>\n        <div className=\"info-box\">\n          <div className=\"info-icon\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"#4CAF50\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M12 16V12\" stroke=\"#4CAF50\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M12 8H12.01\" stroke=\"#4CAF50\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </div>\n          <p>What happens next?</p>\n          <ul>\n            <li>You'll receive a confirmation email within 24 hours</li>\n            <li>Our team will contact you to confirm pickup details</li>\n            <li>Your recyclables will be collected at the scheduled time</li>\n          </ul>\n        </div>\n        <div className=\"actions\">\n          <Link to=\"/\" className=\"back-button\">Return to Home</Link>\n          <Link to=\"/contact\" className=\"contact-button\">Contact Support</Link>\n        </div>\n      </div>\n      <div className=\"trust-badges\">\n        <div className=\"badge\">\n          <span>Trusted by</span>\n          <span className=\"badge-number\">10,000+</span>\n          <span>customers</span>\n        </div>\n        <div className=\"badge\">\n          <span>Over</span>\n          <span className=\"badge-number\">500 tons</span>\n          <span>recycled</span>\n        </div>\n        <div className=\"badge\">\n          <span>Certified</span>\n          <span className=\"badge-number\">Green</span>\n          <span>business</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Thanks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <Link to=\"/\"><img src={require('../assets/images/logo.png')} alt=\"Sustainify Logo\" className=\"logo\" /></Link>\n      <ul>\n        <li>\n          <Link to=\"/\">\n            <h3>Home</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/recycle\">\n            <h3>Recycle Now</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/rates\">\n            <h3>Exchange Rates</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">\n            <h3>Blog</h3>\n          </Link>\n        </li>\n        <li>\n          <a href=\"#about\">\n            <h3>About</h3>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/**\n * Utility functions for interacting with the Google Gemini API\n */\n\n/**\n * Analyzes an image using Google Gemini API and returns recycling suggestions\n * @param {File} imageFile - The image file to analyze\n * @returns {Promise<Object>} - The analysis results\n */\nexport const analyzeImageWithGemini = async (imageFile) => {\n  try {\n    // Get the API key from environment variables\n    const apiKey = process.env.REACT_APP_GEMINI_API_KEY;\n    \n    if (!apiKey || apiKey === '##') {\n      throw new Error('Please set your Gemini API key in the .env file');\n    }\n\n    // Convert the image to base64\n    const base64Image = await fileToBase64(imageFile);\n    \n    // Prepare the request to Gemini API\n    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro-vision:generateContent?key=${apiKey}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        contents: [\n          {\n            parts: [\n              {\n                text: \"Analyze this image and provide suggestions for how to recycle this item at home. Focus on practical, creative ways to reuse or repurpose the item. Format your response as a JSON object with the following structure: { itemType: 'string', suggestions: ['string', 'string', ...] }\"\n              },\n              {\n                inline_data: {\n                  mime_type: imageFile.type,\n                  data: base64Image.split(',')[1] // Remove the data URL prefix\n                }\n              }\n            ]\n          }\n        ],\n        generationConfig: {\n          temperature: 0.4,\n          topK: 32,\n          topP: 1,\n          maxOutputTokens: 4096,\n        }\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`API Error: ${errorData.error?.message || 'Unknown error'}`);\n    }\n\n    const data = await response.json();\n    \n    // Extract the text response from Gemini\n    const textResponse = data.candidates[0]?.content?.parts[0]?.text;\n    \n    if (!textResponse) {\n      throw new Error('No response received from Gemini API');\n    }\n    \n    // Parse the JSON response from the text\n    // The response might not be perfectly formatted JSON, so we need to extract it\n    try {\n      // Try to find JSON in the response\n      const jsonMatch = textResponse.match(/\\{[\\s\\S]*\\}/);\n      const jsonString = jsonMatch ? jsonMatch[0] : null;\n      \n      if (jsonString) {\n        return JSON.parse(jsonString);\n      } else {\n        // If no JSON found, create a structured response from the text\n        return {\n          itemType: 'Recyclable item',\n          suggestions: textResponse.split('\\n')\n            .filter(line => line.trim().length > 0)\n            .map(line => line.replace(/^[•\\-*]\\s*/, '').trim())\n            .filter(line => line.length > 10 && !line.toLowerCase().includes('json'))\n        };\n      }\n    } catch (parseError) {\n      console.error('Error parsing Gemini response:', parseError);\n      \n      // Return a fallback structured response\n      return {\n        itemType: 'Recyclable item',\n        suggestions: [\n          'Clean and repurpose the item as a storage container',\n          'Use in DIY craft projects',\n          'Check local recycling guidelines for proper disposal',\n          'Consider donating if the item is still in good condition'\n        ]\n      };\n    }\n  } catch (error) {\n    console.error('Error analyzing image with Gemini:', error);\n    throw error;\n  }\n};\n\n/**\n * Converts a file to a base64 data URL\n * @param {File} file - The file to convert\n * @returns {Promise<string>} - A promise that resolves with the base64 data URL\n */\nconst fileToBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n","import React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RecycleAnalysis.css';\nimport { analyzeImageWithGemini } from '../utils/geminiApi';\n\nconst RecycleAnalysis = () => {\n  const [images, setImages] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [error, setError] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Function to handle file selection\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    \n    // Validate files (only images allowed)\n    const validFiles = selectedFiles.filter(file => \n      file.type.startsWith('image/')\n    );\n    \n    if (validFiles.length !== selectedFiles.length) {\n      setError('Please upload only image files.');\n      return;\n    }\n    \n    // Create preview URLs for the images\n    const newImages = validFiles.map(file => ({\n      file,\n      preview: URL.createObjectURL(file)\n    }));\n    \n    setImages(prevImages => [...prevImages, ...newImages]);\n    setError(null);\n  };\n\n  // Function to handle drag and drop\n  const handleDrop = (e) => {\n    e.preventDefault();\n    \n    const droppedFiles = Array.from(e.dataTransfer.files);\n    \n    // Validate files (only images allowed)\n    const validFiles = droppedFiles.filter(file => \n      file.type.startsWith('image/')\n    );\n    \n    if (validFiles.length !== droppedFiles.length) {\n      setError('Please upload only image files.');\n      return;\n    }\n    \n    // Create preview URLs for the images\n    const newImages = validFiles.map(file => ({\n      file,\n      preview: URL.createObjectURL(file)\n    }));\n    \n    setImages(prevImages => [...prevImages, ...newImages]);\n    setError(null);\n  };\n\n  // Prevent default behavior for drag events\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  // Function to remove an image\n  const removeImage = (index) => {\n    setImages(prevImages => {\n      const updatedImages = [...prevImages];\n      // Revoke the object URL to avoid memory leaks\n      URL.revokeObjectURL(updatedImages[index].preview);\n      updatedImages.splice(index, 1);\n      return updatedImages;\n    });\n  };\n\n  // Function to trigger file input click\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Function to analyze images\n  const analyzeImages = async () => {\n    if (images.length === 0) {\n      setError('Please upload at least one image to analyze.');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setError(null);\n\n    try {\n      // Process each image with the Gemini API\n      const analysisPromises = images.map(async (image, index) => {\n        try {\n          const result = await analyzeImageWithGemini(image.file);\n          \n          return {\n            id: index,\n            name: image.file.name.split('.')[0], // Extract filename without extension\n            type: result.itemType || 'Recyclable item',\n            suggestions: result.suggestions || [\n              'Check local recycling guidelines for proper disposal',\n              'Consider repurposing for creative DIY projects',\n              'Clean thoroughly before recycling',\n              'Separate different materials if applicable'\n            ],\n            imagePreview: image.preview\n          };\n        } catch (error) {\n          console.error(`Error analyzing image ${index}:`, error);\n          \n          // Return a fallback result if analysis fails\n          return {\n            id: index,\n            name: image.file.name.split('.')[0],\n            type: 'Recyclable item',\n            suggestions: [\n              'Could not analyze this item. Please try again.',\n              'Check local recycling guidelines for proper disposal',\n              'Consider repurposing for creative DIY projects',\n              'Clean thoroughly before recycling'\n            ],\n            imagePreview: image.preview,\n            error: true\n          };\n        }\n      });\n      \n      // Wait for all analyses to complete\n      const results = await Promise.all(analysisPromises);\n      \n      setAnalysisResults({\n        items: results\n      });\n    } catch (error) {\n      console.error('Error during analysis:', error);\n      setError(`Analysis failed: ${error.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Clean up object URLs when component unmounts\n  React.useEffect(() => {\n    return () => {\n      images.forEach(image => {\n        URL.revokeObjectURL(image.preview);\n      });\n    };\n  }, [images]);\n\n  return (\n    <div className=\"recycle-analysis-container\">\n      <div className=\"recycle-analysis-header\">\n        <h1>Recycle Analysis</h1>\n        <p>Upload images of items you want to recycle at home and get personalized suggestions</p>\n      </div>\n\n      {!analysisResults ? (\n        <div className=\"upload-section\">\n          <div \n            className=\"drop-zone\" \n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n            onClick={handleUploadClick}\n          >\n            <div className=\"drop-zone-content\">\n              <div className=\"upload-icon\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M21 15V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V15\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M17 8L12 3L7 8\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M12 3V15\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </div>\n              <h3>Drag & Drop Images Here</h3>\n              <p>or click to browse files</p>\n              <input \n                type=\"file\" \n                ref={fileInputRef}\n                onChange={handleFileChange}\n                accept=\"image/*\"\n                multiple\n                style={{ display: 'none' }}\n              />\n            </div>\n          </div>\n\n          {error && <div className=\"error-message\">{error}</div>}\n\n          {images.length > 0 && (\n            <div className=\"preview-section\">\n              <h3>Selected Images ({images.length})</h3>\n              <div className=\"image-previews\">\n                {images.map((image, index) => (\n                  <div key={index} className=\"image-preview-item\">\n                    <img src={image.preview} alt={`Preview ${index}`} />\n                    <button \n                      className=\"remove-image-btn\"\n                      onClick={() => removeImage(index)}\n                    >\n                      ×\n                    </button>\n                    <div className=\"image-name\">{image.file.name}</div>\n                  </div>\n                ))}\n              </div>\n              <button \n                className=\"analyze-button\"\n                onClick={analyzeImages}\n                disabled={isAnalyzing}\n              >\n                {isAnalyzing ? 'Analyzing...' : 'Analyze Images'}\n              </button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className=\"results-section\">\n          <div className=\"results-header\">\n            <h2>Recycling Suggestions</h2>\n            <p>Based on your uploaded images, here are some ways to recycle these items at home:</p>\n          </div>\n\n          <div className=\"results-grid\">\n            {analysisResults.items.map((item) => (\n              <div key={item.id} className={`result-card ${item.error ? 'error-card' : ''}`}>\n                <div className=\"result-image\">\n                  <img src={item.imagePreview} alt={item.name} />\n                </div>\n                <div className=\"result-content\">\n                  <h3>{item.type}</h3>\n                  <p className=\"item-name\">{item.name}</p>\n                  <h4>Recycling Ideas:</h4>\n                  <ul className=\"suggestions-list\">\n                    {item.suggestions.map((suggestion, index) => (\n                      <li key={index}>{suggestion}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"results-actions\">\n            <button \n              className=\"new-analysis-button\"\n              onClick={() => {\n                setImages([]);\n                setAnalysisResults(null);\n              }}\n            >\n              Start New Analysis\n            </button>\n            <Link to=\"/\" className=\"home-button\">\n              Return to Home\n            </Link>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RecycleAnalysis;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport './App.css';\n\n// Import components for different pages\nimport Home from './components/Home';\nimport RecycleNow from './components/RecycleNow';\nimport ExchangeRates from './components/ExchangeRates';\nimport Blog from './components/Blog';\nimport Thanks from './components/Thanks';\nimport Navbar from './components/Navbar';\nimport RecycleAnalysis from './components/RecycleAnalysis';\n\n// Wrapper component to conditionally render Navbar\nconst AppContent = () => {\n  const location = useLocation();\n  const isHomePage = location.pathname === '/';\n  \n  return (\n    <div className=\"App\">\n      {isHomePage && <Navbar />}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/recycle\" element={<RecycleNow />} />\n        <Route path=\"/rates\" element={<ExchangeRates />} />\n        <Route path=\"/blog\" element={<Blog />} />\n        <Route path=\"/thanks\" element={<Thanks />} />\n        <Route path=\"/recycle-analysis\" element={<RecycleAnalysis />} />\n      </Routes>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <Router>  \n      <AppContent />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}